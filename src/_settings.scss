/* ============================================================================
   SETTINGS
   ========================================================================= */


/**
 * All of Shell's settings (Sass variables).
 *
 * The settings are broken into two categories:
 *
 * - "Global".....settings for the entire library.
 * - "Local"......settings for a particular partial.
 *
 * N.B. usually "Local" settings exist in their relevant partial but we combine
 * them for Shell to make them easier to override. It's easier as you can
 * override all of the settings in the one place—typically in a
 * "_settings.scss" partial—compared to overriding "Local" settings above
 * their relevant partial within the master stylesheet, like so:
 *
   $shell-apply-osx-font-smoothing: true;
   $shell-apply-link-transition: false;
   @import "[library/path]/base";

   $shell-grid-gutter: 24;
   @import "[library/path]/grid";
 *
 * The above set up is more cumbersome to maintain due to "Local" settings
 * being dispersed throughout the master stylesheet plus the master stylesheet
 * should only contain Sass partial imports.
 *
 * Having all settings together in the same Sass partial makes life easier for
 * consumers of Shell.
 *
 * ----------------------------------------------------------------------------
 *
 * All settings start with a global namespace: `$shell` followed by one
 * hyphen, like this:
 *
   $shell-
 *
 * "Global" settings include a letter "g" to easily identify them, like so:
 *
   $shell-g-
 *
 * "Local" settings include the name of its section to easily identify them, so
 * settings for the "Base" and "Grid" sections would be formatted like this:
 *
   $shell-base-
   $shell-grid-
 *
 * The `$shell` namespace prevents your project settings and Shell's settings
 * from clashing with each other, and allows you to easily see what is
 * coming from Shell and what isn't.
 *
 * ----------------------------------------------------------------------------
 *
 * CONTENTS:
 *
 * 1.  Base number (Global)
 * 2.  Colours (Global)
 * 3.  Typography (Global)
 * 4.  Spacing (Global)
 * 5.  Breakpoints (Global)
 * 6.  Z-Index system (Global)
 * 7.  HiDPI units (Global)
 * 8.  HTML textual `input`s (Global)
 * 9.  Base (Local)
 * 10. Container (Local)
 * 11. Grid (Local)
 * 12. Helpers (Local)
 */




/* 1. Base number (Global)
   ========================================================================= */

/**
 * The baseline number from which everything else is derived.
 */

$shell-g-base-number: 16;




/* 2. Colours (Global)
   ========================================================================= */

/**
 * Black and white.
 *
 * N.B. non-overridable.
 */

$shell-g-color-white: #fff;

$shell-g-color-black: #000;


/**
 * Text.
 */

// Base (global text colour)
$shell-g-color-text-base: #444 !default;

// Heading
$shell-g-color-text-heading: $shell-g-color-text-base !default;


/**
 * Links.
 */

$shell-g-color-link: #19a9e5 !default;

$shell-g-color-link-hover: $shell-g-color-link !default;




/* 3. Typography (Global)
   ========================================================================= */

/**
 * Base sizes.
 */

$shell-g-font-size: $shell-g-base-number !default;

// Decrease
$shell-g-font-size-tiny: $shell-g-font-size - 4 !default;

$shell-g-font-size-small: $shell-g-font-size - 2 !default;

// Increase
$shell-g-font-size-large: $shell-g-font-size + 2 !default;

$shell-g-font-size-huge: $shell-g-font-size + 4 !default;


/**
 * Heading sizes.
 */

$shell-g-font-size-heading: $shell-g-base-number * 1.25 !default;

// Decrease
$shell-g-font-size-heading-tiny: $shell-g-font-size-heading - 4 !default;

$shell-g-font-size-heading-small: $shell-g-font-size-heading - 2 !default;

// Increase
$shell-g-font-size-heading-large: $shell-g-font-size-heading + 4 !default;

$shell-g-font-size-heading-huge: $shell-g-font-size-heading + 8 !default;


/**
 * Line height.
 */

$shell-g-line-height: $shell-g-base-number * 1.5 !default;


/**
 * Line height ratio.
 *
 * N.B. non-overridable.
 */

$shell-g-line-height-ratio: $shell-g-line-height / $shell-g-font-size;

/**
 * Families.
 */

// Base
$shell-g-font-family-base: "Akkurat Regular", sans-serif !default;

// Mono-space
$shell-g-font-family-monospace: Consolas, monospace !default;


/**
 * Weights.
 */

$shell-g-font-weight-normal: 400 !default;

$shell-g-font-weight-light: 300 !default;

$shell-g-font-weight-bold: 700 !default;

// Heading weight
$shell-g-font-weight-heading: $shell-g-font-weight-bold !default;


/**
 * Maximum line length.
 */

$shell-g-max-line-length: 600 !default;




/* 4. Spacing (Global)
   ========================================================================= */

$shell-g-spacing-base: $shell-g-base-number !default;

// Decrease
$shell-g-spacing-tiny: $shell-g-spacing-base / 3 !default;

$shell-g-spacing-small: $shell-g-spacing-base / 2 !default;

// Increase
$shell-g-spacing-large: $shell-g-spacing-base * 2 !default;

$shell-g-spacing-huge: $shell-g-spacing-base * 3 !default;




/* 5. Breakpoints (Global)
   ========================================================================= */

/**
 * The breakdown of the breakpoints is based off this chart:
 * http://static.lukew.com/unified_device_design.png
 *
 * Here's the thinking:
 *
 * - Palm..........smart-phones and feature phones—anything that can fit into
 *                 the palm of a hand.
 * - Lap...........typically tablets, notebooks and laptops—anything that is
 *                 portable that doesn't include phones.
 * - Lap small.....smaller tablets/notebooks and e-readers e.g. Kindle.
 * - Lap large.....larger tablets and laptops.
 * - Desk..........desktop computers, TVs, etc.—anything that isn't portable.
 * - Desk large....larger desktop computer monitors, TVs, and who knows what
 *                 else?
 *
 * The breakpoints:
 *
 * - Palm: 0–640px
 * - Lap: 641px +
 * - Lap small: 768px +
 * - Lap large: 901px +
 * - Desk: 1200px +
 * - Desk large: 1366px +
 *
 * @credit
 * http://www.lukew.com/ff/entry.asp?1679
 */


/**
 * All the breakpoints divided by the default user-agent font-size setting
 * that is non-overridable by Shell's base font size setting:
 * `$shell-g-font-size`. We do this division as all viewport width and height
 * media queries are to be applied with the `em` unit. See:
 * http://blog.cloudfour.com/the-ems-have-it-proportional-media-queries-ftw/.
 *
 * N.B. if you wish to override any of the breakpoints then don't forget to
 * apply this calculation:
 *
    ([breakpoint-value] / 16) * 1em
 *
 * N.B. as we're using a Sass map we need to use a Sass function to make it
 * easier to apply the map keys, the function lives in
 * "Mixins/Functions -> Retrieve from maps".
 */

$shell-g-breakpoints: (

  // Palm
  "palm": (640 / 16) * 1em,

  // Lap
  "lap": (641 / 16) * 1em,
  "lap-small": (768 / 16) * 1em,
  "lap-large": (901 / 16) * 1em,

  // Desk
  "desk": (1200 / 16) * 1em,
  "desk-large": (1366 / 16) * 1em

) !default;


/**
 * The setting used for the default breakpoint applied to the
 * "Mixins/Functions -> Apply at breakpoints" mixin.
 */

$shell-g-global-breakpoints: (lap) !default;




/* 6. Z-Index system (Global)
   ========================================================================= */

/**
 * A nice system that uses Sass maps to keep your project `z-index`s
 * maintainable, sane, and free of those crazy `z-index: 99999;` occurrences!
 *
 * Be sure to read this to fully understand how the system works:
 * http://www.sitepoint.com/better-solution-managing-z-index-sass/
 *
 * Shell kicks it off by providing a standard stacking order that most projects
 * would require, you can then update the Sass map in your project "Settings"
 * partial, be sure to use nested maps to make this system aware of stacking
 * contexts as having a flat map will soon become a headache to maintain.
 *
 * Applying `z-index`s with this system is done like this:
 *
    .c-header {
        z-index: z(header);
    }
 *
 * And for nested stacking contexts (defined via a nested map):
 *
    .c-modal__close-button {
        z-index: z(modal-elements, close-button);
    }
 *
 * N.B. as we're using a Sass map (and nested maps) we need to use a Sass
 * function to make it easier to apply the map keys and to be able to
 * retrieve nested map keys. The function lives in
 * "Mixins/Functions -> Retrieve from maps".
 *
 * @credit
 * http://www.sitepoint.com/better-solution-managing-z-index-sass/
 */


/**
 * Starting from highest to lowest:
 *
    <body>
        <modal>
            <modal-close-button>
        <modal-underlay>
        <header>
        <main>
        <footer>
    </body>
 */

$shell-g-z-layers: (
    "modal-elements": (
        "close-button": 1
    ),
    "modal": 5,
    "modal-underlay": 4,
    "header": 3,
    "main": 2,
    "footer": 1,
    "underneath": -1
) !default;




/* 7. HiDPI units (Global)
   ========================================================================= */

/**
 * HiDPI units, currently being used in:
 * "Mixins/Functions -> HiDPI background images".
 *
 * N.B. non-overridable.
 */

$shell-g-hidpi-dpr: 1.3;

$shell-g-hidpi-dpi: ($shell-g-hidpi-dpr * 96) * 1dpi;

$shell-g-hidpi-dppx: 1.3 * 1dppx;




/* 8. HTML textual `input`s (Global)
   ========================================================================= */

$shell-g-textual-inputs: 'input[type="text"],
                          input[type="search"],
                          input[type="tel"],
                          input[type="url"],
                          input[type="email"],
                          input[type="password"],
                          input[type="month"],
                          input[type="week"],
                          input[type="time"],
                          input[type="date"],
                          input[type="datetime"],
                          input[type="datetime-local"],
                          input[type="number"]' !default;




/* 9. Base (Local)
   ========================================================================= */

/**
 * Booleans.
 */

$shell-base-apply-osx-font-smoothing: false !default;

$shell-base-apply-link-transition: true !default;

$shell-base-apply-style-to-disabled-and-readonly-states: true !default;

$shell-base-apply-bottom-margin-to-paragraphs: false !default;

$shell-base-apply-print-styles: true !default;


/**
 * Root element.
 */

$shell-base-root-element-background-color: $shell-g-color-white !default;


/**
 * Links.
 */

$shell-base-link-text-decoration: underline !default;

$shell-base-link-text-decoration-on-hover: none !default;

$shell-base-link-transition-duration: 0.15s !default;

$shell-base-link-transition-timing-function: linear !default;


/**
 * Horizontal rule.
 */

$shell-base-hr-thickness: 1px !default;

$shell-base-hr-style: solid !default;

$shell-base-hr-color: $shell-g-color-text-base !default;


/**
 * Forms.
 */

$shell-base-disabled-and-readonly-state-opacity-strength: 0.6 !default;

$shell-base-target-ios-selector: ".ios" !default;




/* 10. Container (Local)
   ========================================================================= */

/**
 * Booleans.
 */

$shell-container-apply-center-alignment: true !default;


/**
 * Widths.
 */

$shell-container-maximum-width: $shell-g-base-number * 100 !default;

$shell-container-minimum-width: 320 !default;

// Size modifiers
$shell-container-maximum-width-huge: $shell-g-base-number * 150 !default;

$shell-container-maximum-width-large: $shell-g-base-number * 125 !default;

$shell-container-maximum-width-small: $shell-g-base-number * 62.5 !default;

$shell-container-maximum-width-tiny: $shell-g-base-number * 42 !default;


/**
 * Gutter size.
 */

$shell-container-gutter: $shell-g-spacing-huge !default;




/* 11. Grid (Local)
   ========================================================================= */

/**
 * Grid column widths.
 */

$shell-grid-1-col-width: 8.333% !default;

$shell-grid-2-col-width: 16.666% !default;

$shell-grid-3-col-width: 25% !default;

$shell-grid-4-col-width: 33.333% !default;

$shell-grid-5-col-width: 41.666% !default;

$shell-grid-6-col-width: 50% !default;

$shell-grid-7-col-width: 58.333% !default;

$shell-grid-8-col-width: 66.666% !default;

$shell-grid-9-col-width: 75% !default;

$shell-grid-10-col-width: 83.333% !default;

$shell-grid-11-col-width: 91.666% !default;

/**
 * For all grid item widths turn on the ability to apply breakpoints via
 * boolean settings then define the breakpoints, see: "Mixins/Functions ->
 * Apply at breakpoints" to understand how this works.
 */

// 1 col
$shell-grid-apply-1-col-width-at-breakpoints: false !default;

$shell-grid-define-1-col-width-breakpoints: $shell-g-global-breakpoints !default;

// 2 col
$shell-grid-apply-2-col-width-at-breakpoints: false !default;

$shell-grid-define-2-col-width-breakpoints: $shell-g-global-breakpoints !default;

// 3 col
$shell-grid-apply-3-col-width-at-breakpoints: false !default;

$shell-grid-define-3-col-width-breakpoints: $shell-g-global-breakpoints !default;

// 4 col
$shell-grid-apply-4-col-width-at-breakpoints: false !default;

$shell-grid-define-4-col-width-breakpoints: $shell-g-global-breakpoints !default;

// 5 col
$shell-grid-apply-5-col-width-at-breakpoints: false !default;

$shell-grid-define-5-col-width-breakpoints: $shell-g-global-breakpoints !default;

// 6 col
$shell-grid-apply-6-col-width-at-breakpoints: false !default;

$shell-grid-define-6-col-width-breakpoints: $shell-g-global-breakpoints !default;

// 7 col
$shell-grid-apply-7-col-width-at-breakpoints: false !default;

$shell-grid-define-7-col-width-breakpoints: $shell-g-global-breakpoints !default;

// 8 col
$shell-grid-apply-8-col-width-at-breakpoints: false !default;

$shell-grid-define-8-col-width-breakpoints: $shell-g-global-breakpoints !default;

// 9 col
$shell-grid-apply-9-col-width-at-breakpoints: false !default;

$shell-grid-define-9-col-width-breakpoints: $shell-g-global-breakpoints !default;

// 10 col
$shell-grid-apply-10-col-width-at-breakpoints: false !default;

$shell-grid-define-10-col-width-breakpoints: $shell-g-global-breakpoints !default;

// 11 col
$shell-grid-apply-11-col-width-at-breakpoints: false !default;

$shell-grid-define-11-col-width-breakpoints: $shell-g-global-breakpoints !default;




/* 12. Helpers (Local)
   ========================================================================= */

/**
 * For certain "Helpers" turn on the ability to apply breakpoints via boolean
 * settings then define the breakpoints, see: "Mixins/Functions ->
 * Apply at breakpoints" to understand how this works.
 */

/**
 * Text sizes.
 */

// Base
$shell-helper-apply-text-size-base-at-breakpoints: false !default;

$shell-helper-define-text-size-base-breakpoints: $shell-g-global-breakpoints !default;

// Tiny
$shell-helper-apply-text-size-tiny-at-breakpoints: false !default;

$shell-helper-define-text-size-tiny-breakpoints: $shell-g-global-breakpoints !default;

// Small
$shell-helper-apply-text-size-small-at-breakpoints: false !default;

$shell-helper-define-text-size-small-breakpoints: $shell-g-global-breakpoints !default;

// Large
$shell-helper-apply-text-size-large-at-breakpoints: false !default;

$shell-helper-define-text-size-large-breakpoints: $shell-g-global-breakpoints !default;

// Huge
$shell-helper-apply-text-size-huge-at-breakpoints: false !default;

$shell-helper-define-text-size-huge-breakpoints: $shell-g-global-breakpoints !default;

/**
 * Alignments.
 */

// Center
$shell-helper-apply-text-align-center-at-breakpoints: false !default;

$shell-helper-define-text-align-center-breakpoints: $shell-g-global-breakpoints !default;

// Left
$shell-helper-apply-text-align-left-at-breakpoints: false !default;

$shell-helper-define-text-align-left-breakpoints: $shell-g-global-breakpoints !default;

// Right
$shell-helper-apply-text-align-right-at-breakpoints: false !default;

$shell-helper-define-text-align-right-breakpoints: $shell-g-global-breakpoints !default;

/**
 * Text truncate.
 */

$shell-helper-apply-text-truncate-at-breakpoints: false !default;

$shell-helper-define-text-truncate-breakpoints: $shell-g-global-breakpoints !default;

/**
 * Hide.
 */

// Hide elements from both screen readers and the document flow
$shell-helper-apply-hide-at-breakpoints: false !default;

$shell-helper-define-hide-breakpoints: $shell-g-global-breakpoints !default;

// Hide elements only visually but have it available for screen readers
$shell-helper-apply-hide-visually-at-breakpoints: false !default;

$shell-helper-define-hide-visually-breakpoints: $shell-g-global-breakpoints !default;

/**
 * Spacing.
 */

// Base
$shell-helper-apply-spacing-base-at-breakpoints: false !default;

$shell-helper-define-spacing-base-breakpoints: $shell-g-global-breakpoints !default;

// Tiny
$shell-helper-apply-spacing-tiny-at-breakpoints: false !default;

$shell-helper-define-spacing-tiny-breakpoints: $shell-g-global-breakpoints !default;

// Small
$shell-helper-apply-spacing-small-at-breakpoints: false !default;

$shell-helper-define-spacing-small-breakpoints: $shell-g-global-breakpoints !default;

// Large
$shell-helper-apply-spacing-large-at-breakpoints: false !default;

$shell-helper-define-spacing-large-breakpoints: $shell-g-global-breakpoints !default;

// Huge
$shell-helper-apply-spacing-huge-at-breakpoints: false !default;

$shell-helper-define-spacing-huge-breakpoints: $shell-g-global-breakpoints !default;
