/* ============================================================================
   @MIXINS AND FUNCTIONS
   ========================================================================= */


/**
 * All the Sass mixins and functions for Shell.
 *
 * ----------------------------------------------------------------------------
 *
 * CONTENTS:
 *
 * 1. HiDPI (Mixin)
 * 2. Functions
 */




/* 1. HiDPI (Mixin)
   ========================================================================= */

/**
 * A mixin for applying styles for HiDPI screens.
 *
 * We use a device pixel ratio (“dpr”) of “1.3” which captures almost all HiDPI
 * aware devices, see: https://gist.github.com/marcedwards/3446599.
 *
 * N.B.
 * - For applying HiDPI background images see the `hidpi-bg-img()` mixin.
 * - Autoprefixer will take care of generating the non-standard
 *   `-webkit-device-pixel-ratio` for browsers/devices that need it, see:
 *   http://caniuse.com/#feat=css-media-resolution.
 *
 * @example
   @include hidpi {
     background-image: url("path/to/image");
     background-size: 24px auto;
   }

   // Output
   @media (min-resolution: 1.3dppx),
          (min-resolution: 124.8dpi), {
      background-image: url("path/to/image");
      background-size: 24px auto;
    }
 */

@mixin hidpi {
    @media (min-resolution: $shell-g-hidpi-dppx),
           (min-resolution: $shell-g-hidpi-dpi) {
         @content;
    }
}


/**
 * A mixin for easily applying HiDPI background images.
 *
 * Parameters:
 *
 * | Name        | Description             | Type   | Default value |
 * |-------------|-------------------------|--------|---------------|
 * | $img-url    | The image url path      | string | —             |
 * | $img-width  | The image width in `px` | string | auto          |
 * | $img-height | The image width in `px` | string | auto          |
 *
 * @example
   .element-1 {
      background: url("path/to/image") no-repeat;
      @include hidpi-bg-img("path/to/image", 100px, 45px);
    }

    .element-2 {
      background: url("path/to/image") no-repeat;
      @include hidpi-bg-img("path/to/image", 32px);
    }

    // Output
    .element-1 {
      @media (min-resolution: 1.3dppx),
             (min-resolution: 124.8dpi), {
        background-image: url("path/to/image");
        background-size: 100px 45px;
      }
    }

    .element-2 {
      @media (min-resolution: 1.3dppx),
             (min-resolution: 124.8dpi), {
        background-image: url("path/to/image");
        background-size: 32px auto;
      }
    }
 */

// @mixin hidpi-bg-img($img-url: null, $img-width: auto, $img-height: auto) {
//     @include hidpi {
//         @if ($img-url == null) {
//             background-image: url($img-url);
//         } @else {
//             @error "You must enter an image path";
//         }

//         @if (($img-width == auto) and ($img-height == auto)) {
//             @error "You must enter either an image width or an image height";
//         } @else {
//             background-size: $img-width $img-height;
//         }
//     }
// }

@mixin hidpi-bg-img($img-url, $img-width: auto, $img-height: auto) {
    background-image: url($img-url);
    background-size: $img-width $img-height;
}
